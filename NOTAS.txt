--------- PARA ESTE ERROR 

 MissingSchemaError: Schema hasn't been registered for model "User".

Pasarle directamente el modelo en vez de un string 'User'
  populate: {
          path: 'user',
          model: User,
        }


--------- PARA ESTE ERROR

Error: ENOENT: no such file or directory, open 'C:\Users\danie\OneDrive\Documentos\Nueva carpeta\coach\.next\server\app-paths-manifest.json'

Remove-Item -Recurse -Force .next (en terminal para borrar cache y reinstalar dependencias)


--------- 

Sí, si tenés Gemini Pro pago (el plan de Google AI), podés integrarlo perfectamente en tu proyecto de Next.js.

Google pone a disposición el Gemini API a través de la Google AI SDK (o directamente vía REST). 
Eso significa que podés consumirlo desde tu backend en Next.js (en app/api/.../route.js o pages/api/...) o incluso desde el cliente, 
aunque lo recomendado es usarlo en el backend para proteger tu clave API.


npm install @google/generative-ai

GOOGLE_API_KEY=tu_api_key_de_gemini


import { NextResponse } from 'next/server';
import { GoogleGenerativeAI } from '@google/generative-ai';

const genAI = new GoogleGenerativeAI(process.env.GOOGLE_API_KEY);

EJEMPLO
export async function POST(req) {
  try {
    const { prompt } = await req.json();
    const model = genAI.getGenerativeModel({ model: 'gemini-pro' });

    const result = await model.generateContent(prompt);
    const response = await result.response;
    const text = response.text();

    return NextResponse.json({ output: text });
  } catch (error) {
    console.error(error);
    return NextResponse.json({ error: 'Error al generar respuesta' }, { status: 500 });
  }
}


--------------------------------------------------------------------------
C:\Users\Daniel Frutos\Documents\CoachingIA\src\components\ui\goals-modal.tsx REVISAR PARA ELIMINAR

C:\Users\Daniel Frutos\Documents\CoachingIA\src\app\api\objective\finalize\route.ts // REVISAR QUE FINALICE CORRECTAMENTE EL OBJETIVO